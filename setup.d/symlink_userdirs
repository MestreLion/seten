#!/usr/bin/env bash
# Copyright (C) 2021 Rodrigo Silva (MestreLion) <linux@rodrigosilva.com>
# License: GPLv3 or later. See <http://www.gnu.org/licenses/gpl.html>
# -----------------------------------------------------------------------------

DESCRIPTION='Replace special user directories with symlinks to data partition'
ARGS='[TARGET_BASEDIR]'

setuplib=${SETUP_LIB_PATH:-"$(dirname "$(readlink -f "$0")")"/../setuplib}
# shellcheck source=../setuplib
if [[ -r "$setuplib" ]]; then source "$setuplib"; else
	echo "Setup library not found: $setuplib" >&2; exit 1;
fi

# -----------------------------------------------------------------------------

basedir=${1:-SETUP_USERDIRS_TARGET:-}
if ! [[ -v SETUP_USERDIRS_OVERRIDES ]]; then declare -A SETUP_USERDIRS_OVERRIDES; fi
if ! [[ -v SETUP_USERDIRS_HIDE ]]; then SETUP_USERDIRS_HIDE=(TEMPLATES PUBLICSHARE); fi

# -----------------------------------------------------------------------------


merge_dirs() {
	local tag=$1
	source=$(xdg-user-dir "$tag")
	# Skip if it does not exist, or already a symlink, or set to $HOME
	if [[ ! -e "$source" || -h "$source" || "$source" == "$HOME" ]]; then
		return
	fi
	leaf=$(realpath --canonicalize-missing --relative-base "$HOME" -- \
		"${SETUP_USERDIRS_OVERRIDES[$tag]:-$source}")
	target=$(realpath --canonicalize-missing --relative-base "$basedir" -- "$leaf")
	message "Move content and symlink '$source' -> '$target'"
	setup_run mkdir -p -- "$target"
	setup_run rsync -aSh --progress --remove-source-files -- \
		"${source%/}/" "${target%/}/"
	setup_run find "$source" -type d -empty -delete
	setup_run ln -s -- "$target" "$source"
}
if [[ "$basedir" ]]; then
	for tag in DOCUMENTS DOWNLOAD MUSIC PICTURES VIDEOS; do
		merge_dirs "$tag"
	done
fi

# Hide templates, publicshare, examples
message "Hide Examples" "${SETUP_USERDIRS_HIDE[@]}"
hide_path() {
	local path=$1
	local path_file; path_file=$(basename -- "$path")
	local path_dir;  path_dir=$( dirname  -- "$path")
	local hidden=${path_dir}/.hidden
	if [[ -e "$path" ]] && ! grep -qF "$path_file" "$hidden" 2>/dev/null; then
		backup_file "$hidden"
		echo "$path_file" | setup_run tee -a "$hidden"
	fi
}
hide_path "$HOME/examples.desktop"
for tag in "${SETUP_USERDIRS_HIDE[@]}"; do
	path=$(xdg-user-dir "$tag")
	if [[ "$path" == "$HOME" ]]; then continue; fi
	hide_path "$path"
done
